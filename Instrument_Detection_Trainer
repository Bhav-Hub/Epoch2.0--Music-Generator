{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "cBwfmaWLv1Z2"
      },
      "source": [
        "# Importing libraries, loading and transforming data"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hblHh-p5wX-1",
        "outputId": "fec8416e-f88a-434e-8da8-48102c8b238a"
      },
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "6xR1s65-FQMN"
      },
      "execution_count": 1,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-08-25T18:32:37.658225Z",
          "iopub.status.busy": "2023-08-25T18:32:37.65774Z",
          "iopub.status.idle": "2023-08-25T18:35:21.08998Z",
          "shell.execute_reply": "2023-08-25T18:35:21.088611Z",
          "shell.execute_reply.started": "2023-08-25T18:32:37.658179Z"
        },
        "trusted": true,
        "id": "YQSZZ2YIv1Z3"
      },
      "outputs": [],
      "source": [
        "# !pip install -q evaluate transformers==4.28.1\n",
        "# !pip install -U -q datasets\n",
        "# !pip install -q torchaudio==0.12\n",
        "# !add-apt-repository -y ppa:savoury1/ffmpeg4\n",
        "# !apt-get -qq install -y ffmpeg\n",
        "# !pip install -q mlflow"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-08-25T18:35:21.092757Z",
          "iopub.status.busy": "2023-08-25T18:35:21.092447Z",
          "iopub.status.idle": "2023-08-25T18:35:25.271497Z",
          "shell.execute_reply": "2023-08-25T18:35:25.269527Z",
          "shell.execute_reply.started": "2023-08-25T18:35:21.092731Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jrkVv0qlv1Z4",
        "outputId": "829f1afb-08cf-4318-9d95-ede992e271e7"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "4.28.1\n"
          ]
        }
      ],
      "source": [
        "#imports\n",
        "import pandas as pd\n",
        "import gc\n",
        "import re\n",
        "import numpy as np\n",
        "import os\n",
        "\n",
        "import warnings\n",
        "warnings.filterwarnings(\"ignore\")\n",
        "\n",
        "from tqdm import tqdm\n",
        "tqdm.pandas()\n",
        "from imblearn.over_sampling import RandomOverSampler\n",
        "from imblearn.under_sampling import RandomUnderSampler\n",
        "import torch\n",
        "import datasets\n",
        "import transformers\n",
        "print(transformers.__version__)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-08-25T18:59:17.462661Z",
          "iopub.status.busy": "2023-08-25T18:59:17.462252Z",
          "iopub.status.idle": "2023-08-25T18:59:17.492446Z",
          "shell.execute_reply": "2023-08-25T18:59:17.491547Z",
          "shell.execute_reply.started": "2023-08-25T18:59:17.462627Z"
        },
        "trusted": true,
        "id": "19I5Gve3v1Z4"
      },
      "outputs": [],
      "source": [
        "# df_list = []\n",
        "# for loc in ['Train', 'Test']:\n",
        "#     df_tmp = pd.read_csv(f\"/kaggle/input/musical-instruments-sound-dataset/Metadata_{loc}.csv\")\n",
        "#     df_list.append(df_tmp)\n",
        "# df = pd.concat(df_list, axis=0)\n",
        "# df['Class'] = df['Class'].replace({\"Sound_Guiatr\": \"Sound_Guitar\"})\n",
        "# # remove violin label as it is contaminated by Drums\n",
        "# df = df[df['Class']!=\"Sound_Violin\"]\n",
        "# print(df.shape)\n",
        "# df.sample(5).T"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "metadata": {
        "id": "IrN4uwG_v1Z4"
      },
      "outputs": [],
      "source": [
        "import os\n",
        "import pandas as pd\n",
        "\n",
        "directory = r'/content/drive/MyDrive/music_dataset'\n",
        "\n",
        "train_df = pd.DataFrame(columns = ['Class', 'FileName','file'])\n",
        "test_df = pd.DataFrame(columns = ['Class', 'FileName','file'])\n",
        "\n",
        "for folder in os.listdir(directory):\n",
        "    folder_path = os.path.join(directory, folder)\n",
        "    for file in os.listdir(folder_path):\n",
        "        if int(file[:-4]) < 160:\n",
        "            file_path = os.path.join(folder_path, file)\n",
        "            train_df = pd.concat([train_df, pd.DataFrame([{'Class': folder, 'FileName': file, 'file':file_path}])], ignore_index=True)\n",
        "        else:\n",
        "            file_path = os.path.join(folder_path, file)\n",
        "            test_df = pd.concat([test_df, pd.DataFrame([{'Class': folder, 'FileName': file, 'file':file_path}])], ignore_index=True)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 6,
      "metadata": {
        "id": "J7YANiN9v1Z4"
      },
      "outputs": [],
      "source": [
        "df_list = []\n",
        "df_list.append(train_df)\n",
        "df_list.append(test_df)\n",
        "df = pd.concat(df_list, axis=0)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 7,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 181
        },
        "id": "SaBM1uQNv1Z4",
        "outputId": "5ac2e23b-22d2-400a-d6ee-e2fb67c349f2"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(1800, 3)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                                       236   \\\n",
              "Class                                              Keyboard   \n",
              "FileName                                            181.wav   \n",
              "file      /content/drive/MyDrive/music_dataset/Keyboard/...   \n",
              "\n",
              "                                                       1291  \\\n",
              "Class                                        Electro_Guitar   \n",
              "FileName                                            119.wav   \n",
              "file      /content/drive/MyDrive/music_dataset/Electro_G...   \n",
              "\n",
              "                                                       349   \\\n",
              "Class                                       Acoustic_Guitar   \n",
              "FileName                                             13.wav   \n",
              "file      /content/drive/MyDrive/music_dataset/Acoustic_...   \n",
              "\n",
              "                                                       47    \\\n",
              "Class                                                 flute   \n",
              "FileName                                            165.wav   \n",
              "file      /content/drive/MyDrive/music_dataset/flute/165...   \n",
              "\n",
              "                                                       282   \n",
              "Class                                                 flute  \n",
              "FileName                                             70.wav  \n",
              "file      /content/drive/MyDrive/music_dataset/flute/70.wav  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-bc379023-e61f-4abb-b83e-6170dcddfc12\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>236</th>\n",
              "      <th>1291</th>\n",
              "      <th>349</th>\n",
              "      <th>47</th>\n",
              "      <th>282</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Class</th>\n",
              "      <td>Keyboard</td>\n",
              "      <td>Electro_Guitar</td>\n",
              "      <td>Acoustic_Guitar</td>\n",
              "      <td>flute</td>\n",
              "      <td>flute</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>FileName</th>\n",
              "      <td>181.wav</td>\n",
              "      <td>119.wav</td>\n",
              "      <td>13.wav</td>\n",
              "      <td>165.wav</td>\n",
              "      <td>70.wav</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>file</th>\n",
              "      <td>/content/drive/MyDrive/music_dataset/Keyboard/...</td>\n",
              "      <td>/content/drive/MyDrive/music_dataset/Electro_G...</td>\n",
              "      <td>/content/drive/MyDrive/music_dataset/Acoustic_...</td>\n",
              "      <td>/content/drive/MyDrive/music_dataset/flute/165...</td>\n",
              "      <td>/content/drive/MyDrive/music_dataset/flute/70.wav</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bc379023-e61f-4abb-b83e-6170dcddfc12')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-bc379023-e61f-4abb-b83e-6170dcddfc12 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-bc379023-e61f-4abb-b83e-6170dcddfc12');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-01c9961b-739a-4e7b-b65f-7b430f688a80\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-01c9961b-739a-4e7b-b65f-7b430f688a80')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-01c9961b-739a-4e7b-b65f-7b430f688a80 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": 236,\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Keyboard\",\n          \"181.wav\",\n          \"/content/drive/MyDrive/music_dataset/Keyboard/181.wav\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1291,\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Electro_Guitar\",\n          \"119.wav\",\n          \"/content/drive/MyDrive/music_dataset/Electro_Guitar/119.wav\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 349,\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Acoustic_Guitar\",\n          \"13.wav\",\n          \"/content/drive/MyDrive/music_dataset/Acoustic_Guitar/13.wav\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 47,\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"flute\",\n          \"165.wav\",\n          \"/content/drive/MyDrive/music_dataset/flute/165.wav\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 282,\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"flute\",\n          \"70.wav\",\n          \"/content/drive/MyDrive/music_dataset/flute/70.wav\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 7
        }
      ],
      "source": [
        "print(df.shape)\n",
        "df.sample(5).T"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 8,
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-08-25T19:00:06.700694Z",
          "iopub.status.busy": "2023-08-25T19:00:06.699994Z",
          "iopub.status.idle": "2023-08-25T19:00:06.711898Z",
          "shell.execute_reply": "2023-08-25T19:00:06.710804Z",
          "shell.execute_reply.started": "2023-08-25T19:00:06.700661Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 397
        },
        "id": "IZM6bfNYv1Z5",
        "outputId": "7e9e23ed-5752-44df-ec6b-77eb01900626"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Class\n",
              "Hi_Hats            200\n",
              "flute              200\n",
              "Acoustic_Guitar    200\n",
              "Violin             200\n",
              "Drum_set           200\n",
              "Keyboard           200\n",
              "Bass_Guitar        200\n",
              "Trumpet            200\n",
              "Electro_Guitar     200\n",
              "Name: count, dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Class</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Hi_Hats</th>\n",
              "      <td>200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>flute</th>\n",
              "      <td>200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Acoustic_Guitar</th>\n",
              "      <td>200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Violin</th>\n",
              "      <td>200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Drum_set</th>\n",
              "      <td>200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Keyboard</th>\n",
              "      <td>200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Bass_Guitar</th>\n",
              "      <td>200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Trumpet</th>\n",
              "      <td>200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Electro_Guitar</th>\n",
              "      <td>200</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ],
      "source": [
        "df['Class'].value_counts()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 9,
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-08-25T19:00:44.816216Z",
          "iopub.status.busy": "2023-08-25T19:00:44.815824Z",
          "iopub.status.idle": "2023-08-25T19:00:44.823739Z",
          "shell.execute_reply": "2023-08-25T19:00:44.822719Z",
          "shell.execute_reply.started": "2023-08-25T19:00:44.816185Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "g-pQAbabv1Z5",
        "outputId": "a1ee5ac0-717a-4435-cf67-1fc983343492"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{0: 'Acoustic_Guitar', 1: 'Bass_Guitar', 2: 'Drum_set', 3: 'Electro_Guitar', 4: 'flute', 5: 'Hi_Hats', 6: 'Keyboard', 7: 'Trumpet', 8: 'Violin'} \n",
            "\n",
            " {'Acoustic_Guitar': 0, 'Bass_Guitar': 1, 'Drum_set': 2, 'Electro_Guitar': 3, 'flute': 4, 'Hi_Hats': 5, 'Keyboard': 6, 'Trumpet': 7, 'Violin': 8}\n"
          ]
        }
      ],
      "source": [
        "RATE_HZ = 16000 # resampling rate in Hz\n",
        "MAX_LENGTH = 48000 # maximum audio interval length to consider (= RATE_HZ * SECONDS)\n",
        "labels = ['Acoustic_Guitar',\n",
        "'Bass_Guitar',\n",
        "'Drum_set',\n",
        "'Electro_Guitar',\n",
        "'flute',\n",
        "'Hi_Hats',\n",
        "'Keyboard',\n",
        "'Trumpet',\n",
        "'Violin']\n",
        "\n",
        "label2id, id2label = dict(), dict()\n",
        "for i, label in enumerate(labels):\n",
        "    label2id[label] = i\n",
        "    id2label[i] = label\n",
        "\n",
        "print(id2label, '\\n\\n', label2id)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 10,
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-08-25T19:00:55.458832Z",
          "iopub.status.busy": "2023-08-25T19:00:55.458475Z",
          "iopub.status.idle": "2023-08-25T19:00:55.825239Z",
          "shell.execute_reply": "2023-08-25T19:00:55.823926Z",
          "shell.execute_reply.started": "2023-08-25T19:00:55.458803Z"
        },
        "trusted": true,
        "id": "wV4Fgl8yv1Z5"
      },
      "outputs": [],
      "source": [
        "from pathlib import Path\n",
        "import torchaudio\n",
        "\n",
        "# def load_data():\n",
        "#     file_list = []\n",
        "#     sample_list = []\n",
        "#     for file in Path('/kaggle/input/musical-instruments-sound-dataset/').glob('*_submission/*_submission/*.wav'):\n",
        "#         sample_name = file.stem + '.wav' #re.match(r\"(\\d+)\", file.stem).group(0)\n",
        "#         file_list.append(file)\n",
        "#         sample_list.append(str(sample_name))\n",
        "#     dd = pd.DataFrame()\n",
        "#     dd['file'] = file_list\n",
        "#     dd['FileName'] = sample_list\n",
        "#     return dd"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 11,
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-08-25T20:20:01.953197Z",
          "iopub.status.busy": "2023-08-25T20:20:01.952773Z",
          "iopub.status.idle": "2023-08-25T20:20:02.012638Z",
          "shell.execute_reply": "2023-08-25T20:20:02.011693Z",
          "shell.execute_reply.started": "2023-08-25T20:20:01.953164Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 163
        },
        "id": "ibvYHKCgv1Z5",
        "outputId": "f01335f9-9de3-4abf-e08e-79acbcdd4156"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                                    1169  \\\n",
              "file   /content/drive/MyDrive/music_dataset/Trumpet/1...   \n",
              "label                                                  7   \n",
              "Class                                            Trumpet   \n",
              "\n",
              "                                                    1051  \\\n",
              "file   /content/drive/MyDrive/music_dataset/Bass_Guit...   \n",
              "label                                                  1   \n",
              "Class                                        Bass_Guitar   \n",
              "\n",
              "                                                    743   \\\n",
              "file   /content/drive/MyDrive/music_dataset/Drum_set/...   \n",
              "label                                                  2   \n",
              "Class                                           Drum_set   \n",
              "\n",
              "                                                    742   \\\n",
              "file   /content/drive/MyDrive/music_dataset/Drum_set/...   \n",
              "label                                                  2   \n",
              "Class                                           Drum_set   \n",
              "\n",
              "                                                    978   \n",
              "file   /content/drive/MyDrive/music_dataset/Bass_Guit...  \n",
              "label                                                  1  \n",
              "Class                                        Bass_Guitar  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-26d8598a-1318-4a8d-a5cc-ca7207a5a89d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>1169</th>\n",
              "      <th>1051</th>\n",
              "      <th>743</th>\n",
              "      <th>742</th>\n",
              "      <th>978</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>file</th>\n",
              "      <td>/content/drive/MyDrive/music_dataset/Trumpet/1...</td>\n",
              "      <td>/content/drive/MyDrive/music_dataset/Bass_Guit...</td>\n",
              "      <td>/content/drive/MyDrive/music_dataset/Drum_set/...</td>\n",
              "      <td>/content/drive/MyDrive/music_dataset/Drum_set/...</td>\n",
              "      <td>/content/drive/MyDrive/music_dataset/Bass_Guit...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>label</th>\n",
              "      <td>7</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Class</th>\n",
              "      <td>Trumpet</td>\n",
              "      <td>Bass_Guitar</td>\n",
              "      <td>Drum_set</td>\n",
              "      <td>Drum_set</td>\n",
              "      <td>Bass_Guitar</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-26d8598a-1318-4a8d-a5cc-ca7207a5a89d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-26d8598a-1318-4a8d-a5cc-ca7207a5a89d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-26d8598a-1318-4a8d-a5cc-ca7207a5a89d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-71fb2f49-b4ee-48e8-82be-df3fc3f0f28c\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-71fb2f49-b4ee-48e8-82be-df3fc3f0f28c')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-71fb2f49-b4ee-48e8-82be-df3fc3f0f28c button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"dd\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": 1169,\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"/content/drive/MyDrive/music_dataset/Trumpet/129.wav\",\n          7,\n          \"Trumpet\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1051,\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"/content/drive/MyDrive/music_dataset/Bass_Guitar/41.wav\",\n          1,\n          \"Bass_Guitar\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 743,\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"/content/drive/MyDrive/music_dataset/Drum_set/47.wav\",\n          2,\n          \"Drum_set\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 742,\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"/content/drive/MyDrive/music_dataset/Drum_set/41.wav\",\n          2,\n          \"Drum_set\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 978,\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"/content/drive/MyDrive/music_dataset/Bass_Guitar/120.wav\",\n          1,\n          \"Bass_Guitar\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 11
        }
      ],
      "source": [
        "dd = df.copy()\n",
        "# dd = dd.set_index('FileName').join(df.set_index('FileName'), how='inner')\n",
        "dd = dd[dd['Class'].isin(labels)]\n",
        "dd['label'] = dd['Class'].apply(lambda x: label2id[x])\n",
        "selected_cols = ['file', 'label', 'Class']\n",
        "dd = dd[selected_cols]\n",
        "dd.sample(5).T"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 12,
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-08-25T20:20:03.031498Z",
          "iopub.status.busy": "2023-08-25T20:20:03.03051Z",
          "iopub.status.idle": "2023-08-25T20:20:03.04253Z",
          "shell.execute_reply": "2023-08-25T20:20:03.041457Z",
          "shell.execute_reply.started": "2023-08-25T20:20:03.031442Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "cd4bE1L8v1Z5",
        "outputId": "fc4cc927-4628-42e6-e893-891d891238e4"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                                file  label    Class\n",
              "0  /content/drive/MyDrive/music_dataset/Hi_Hats/1...      5  Hi_Hats\n",
              "1  /content/drive/MyDrive/music_dataset/Hi_Hats/1...      5  Hi_Hats\n",
              "2  /content/drive/MyDrive/music_dataset/Hi_Hats/1...      5  Hi_Hats\n",
              "3  /content/drive/MyDrive/music_dataset/Hi_Hats/1...      5  Hi_Hats\n",
              "4  /content/drive/MyDrive/music_dataset/Hi_Hats/1...      5  Hi_Hats"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2642cc8a-080d-49fe-9ed9-f02115cfc02a\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>file</th>\n",
              "      <th>label</th>\n",
              "      <th>Class</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>/content/drive/MyDrive/music_dataset/Hi_Hats/1...</td>\n",
              "      <td>5</td>\n",
              "      <td>Hi_Hats</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>/content/drive/MyDrive/music_dataset/Hi_Hats/1...</td>\n",
              "      <td>5</td>\n",
              "      <td>Hi_Hats</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>/content/drive/MyDrive/music_dataset/Hi_Hats/1...</td>\n",
              "      <td>5</td>\n",
              "      <td>Hi_Hats</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>/content/drive/MyDrive/music_dataset/Hi_Hats/1...</td>\n",
              "      <td>5</td>\n",
              "      <td>Hi_Hats</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>/content/drive/MyDrive/music_dataset/Hi_Hats/1...</td>\n",
              "      <td>5</td>\n",
              "      <td>Hi_Hats</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2642cc8a-080d-49fe-9ed9-f02115cfc02a')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2642cc8a-080d-49fe-9ed9-f02115cfc02a button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2642cc8a-080d-49fe-9ed9-f02115cfc02a');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-d2dc8f6d-96de-4a03-9019-b8a843e7440b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d2dc8f6d-96de-4a03-9019-b8a843e7440b')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-d2dc8f6d-96de-4a03-9019-b8a843e7440b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "dd",
              "summary": "{\n  \"name\": \"dd\",\n  \"rows\": 1800,\n  \"fields\": [\n    {\n      \"column\": \"file\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1800,\n        \"samples\": [\n          \"/content/drive/MyDrive/music_dataset/Violin/179.wav\",\n          \"/content/drive/MyDrive/music_dataset/Keyboard/95.wav\",\n          \"/content/drive/MyDrive/music_dataset/Keyboard/21.wav\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 0,\n        \"max\": 8,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          7,\n          4,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Class\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"Trumpet\",\n          \"flute\",\n          \"Keyboard\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 12
        }
      ],
      "source": [
        "dd = dd.reset_index(drop=True)\n",
        "dd.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 13,
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-08-25T20:20:06.521178Z",
          "iopub.status.busy": "2023-08-25T20:20:06.520793Z",
          "iopub.status.idle": "2023-08-25T20:22:17.232546Z",
          "shell.execute_reply": "2023-08-25T20:22:17.230888Z",
          "shell.execute_reply.started": "2023-08-25T20:20:06.521145Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "m1V5Mrakv1Z5",
        "outputId": "c696626c-bf85-4297-e4f4-88f27ed8778b"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 1800/1800 [00:46<00:00, 38.57it/s]\n"
          ]
        }
      ],
      "source": [
        "def get_transform_audio(file):\n",
        "    audio,rate = torchaudio.load(str(file))\n",
        "    transform = torchaudio.transforms.Resample(rate,RATE_HZ)\n",
        "    audio = transform(audio).squeeze(0).numpy()\n",
        "    audio = audio[:MAX_LENGTH] # truncate to first part of audio to save RAM\n",
        "    # return audio only if it is full length audio\n",
        "    if audio.shape[0]==MAX_LENGTH:\n",
        "        return audio\n",
        "dd['audio'] = dd['file'].progress_apply(get_transform_audio)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 14,
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-08-25T20:22:21.464481Z",
          "iopub.status.busy": "2023-08-25T20:22:21.464105Z",
          "iopub.status.idle": "2023-08-25T20:22:21.479044Z",
          "shell.execute_reply": "2023-08-25T20:22:21.478072Z",
          "shell.execute_reply.started": "2023-08-25T20:22:21.464451Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5cdPnhmHv1Z5",
        "outputId": "5e079ed2-6918-4446-b94b-8c8b165398e3"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1800, 4)"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ],
      "source": [
        "# dd = dd.dropna(subset=['audio'])\n",
        "dd.shape"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dd.isnull().sum()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 209
        },
        "id": "5F9I7h9a6DEk",
        "outputId": "d1af0481-1217-4cea-f1bb-fe62f99f4814"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "file     0\n",
              "label    0\n",
              "Class    0\n",
              "audio    0\n",
              "dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>file</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>label</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Class</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>audio</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 16,
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-08-25T20:22:25.289472Z",
          "iopub.status.busy": "2023-08-25T20:22:25.28909Z",
          "iopub.status.idle": "2023-08-25T20:22:25.907669Z",
          "shell.execute_reply": "2023-08-25T20:22:25.906683Z",
          "shell.execute_reply.started": "2023-08-25T20:22:25.289434Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "o_sAMYj_v1Z5",
        "outputId": "754a5c17-9427-4b24-e9ef-f7a469500e2d"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "30"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ],
      "source": [
        "# %%time\n",
        "# random oversampling of all minority classes\n",
        "y = dd[['label']]\n",
        "dd = dd.drop(['label'], axis=1)\n",
        "ros = RandomOverSampler(random_state=83)\n",
        "dd, y_resampled = ros.fit_resample(dd, y)\n",
        "del y\n",
        "dd['label'] = y_resampled\n",
        "del y_resampled\n",
        "gc.collect()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 17,
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-08-25T20:22:29.362714Z",
          "iopub.status.busy": "2023-08-25T20:22:29.362342Z",
          "iopub.status.idle": "2023-08-25T20:22:29.370836Z",
          "shell.execute_reply": "2023-08-25T20:22:29.369778Z",
          "shell.execute_reply.started": "2023-08-25T20:22:29.362685Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gEjWT8ouv1Z5",
        "outputId": "4ac90365-fa86-470a-c762-4e7a1b447924"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "((1800, 4),\n",
              " label\n",
              " 5    200\n",
              " 4    200\n",
              " 0    200\n",
              " 8    200\n",
              " 2    200\n",
              " 6    200\n",
              " 1    200\n",
              " 7    200\n",
              " 3    200\n",
              " Name: count, dtype: int64)"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ],
      "source": [
        "dd.shape, dd['label'].value_counts()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 18,
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-08-25T20:22:30.394314Z",
          "iopub.status.busy": "2023-08-25T20:22:30.393681Z",
          "iopub.status.idle": "2023-08-25T20:22:30.401875Z",
          "shell.execute_reply": "2023-08-25T20:22:30.40096Z",
          "shell.execute_reply.started": "2023-08-25T20:22:30.394274Z"
        },
        "trusted": true,
        "id": "g1nJjdurv1Z6"
      },
      "outputs": [],
      "source": [
        "# %%time\n",
        "dd = dd.drop(['file'], axis=1)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 19,
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-08-25T20:22:31.575364Z",
          "iopub.status.busy": "2023-08-25T20:22:31.574991Z",
          "iopub.status.idle": "2023-08-25T20:22:31.59637Z",
          "shell.execute_reply": "2023-08-25T20:22:31.595296Z",
          "shell.execute_reply.started": "2023-08-25T20:22:31.575333Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 195
        },
        "id": "l6QG-kdnv1Z6",
        "outputId": "f2259879-32a5-494b-d169-4fac727a47d6"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                                    1556  \\\n",
              "Class                                             Violin   \n",
              "audio  [0.0015343709, 0.0009984919, 0.0054823887, 0.0...   \n",
              "label                                                  8   \n",
              "\n",
              "                                                    214   \\\n",
              "Class                                              flute   \n",
              "audio  [0.05963726, 0.06946497, 0.060360033, 0.058770...   \n",
              "label                                                  4   \n",
              "\n",
              "                                                    475   \\\n",
              "Class                                    Acoustic_Guitar   \n",
              "audio  [-0.10891036, -0.12955222, -0.13090727, -0.144...   \n",
              "label                                                  0   \n",
              "\n",
              "                                                    1318  \\\n",
              "Class                                     Electro_Guitar   \n",
              "audio  [-0.12996055, -0.14878643, -0.12414703, -0.109...   \n",
              "label                                                  3   \n",
              "\n",
              "                                                    1622  \n",
              "Class                                           Drum_set  \n",
              "audio  [0.025455339, 0.01178626, -0.015414771, 0.0040...  \n",
              "label                                                  2  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ee576edc-f095-4d4a-8d07-64226d6ad69a\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>1556</th>\n",
              "      <th>214</th>\n",
              "      <th>475</th>\n",
              "      <th>1318</th>\n",
              "      <th>1622</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Class</th>\n",
              "      <td>Violin</td>\n",
              "      <td>flute</td>\n",
              "      <td>Acoustic_Guitar</td>\n",
              "      <td>Electro_Guitar</td>\n",
              "      <td>Drum_set</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>audio</th>\n",
              "      <td>[0.0015343709, 0.0009984919, 0.0054823887, 0.0...</td>\n",
              "      <td>[0.05963726, 0.06946497, 0.060360033, 0.058770...</td>\n",
              "      <td>[-0.10891036, -0.12955222, -0.13090727, -0.144...</td>\n",
              "      <td>[-0.12996055, -0.14878643, -0.12414703, -0.109...</td>\n",
              "      <td>[0.025455339, 0.01178626, -0.015414771, 0.0040...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>label</th>\n",
              "      <td>8</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ee576edc-f095-4d4a-8d07-64226d6ad69a')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ee576edc-f095-4d4a-8d07-64226d6ad69a button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ee576edc-f095-4d4a-8d07-64226d6ad69a');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-3b548f85-f62a-40fe-a2cb-41ee64fc57a6\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3b548f85-f62a-40fe-a2cb-41ee64fc57a6')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-3b548f85-f62a-40fe-a2cb-41ee64fc57a6 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"dd\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": 1556,\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 214,\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 475,\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1318,\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1622,\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 19
        }
      ],
      "source": [
        "dd.sample(5).T"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 20,
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-08-25T20:22:35.045198Z",
          "iopub.status.busy": "2023-08-25T20:22:35.043929Z",
          "iopub.status.idle": "2023-08-25T20:22:40.232438Z",
          "shell.execute_reply": "2023-08-25T20:22:40.231408Z",
          "shell.execute_reply.started": "2023-08-25T20:22:35.045153Z"
        },
        "trusted": true,
        "id": "pfc8bxjxv1Z6"
      },
      "outputs": [],
      "source": [
        "from datasets import Dataset\n",
        "dd = Dataset.from_pandas(dd)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 21,
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-08-25T20:22:47.224172Z",
          "iopub.status.busy": "2023-08-25T20:22:47.223755Z",
          "iopub.status.idle": "2023-08-25T20:22:47.232486Z",
          "shell.execute_reply": "2023-08-25T20:22:47.231384Z",
          "shell.execute_reply.started": "2023-08-25T20:22:47.224138Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qM2dWJDkv1Z6",
        "outputId": "545aa881-f11c-4375-955f-0565b59e1408"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "dict_items([(5, 200), (4, 200), (0, 200), (8, 200), (2, 200), (6, 200), (1, 200), (7, 200), (3, 200)])"
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ],
      "source": [
        "from collections import Counter\n",
        "Counter(dd['label']).items()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 22,
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-08-25T20:22:48.490756Z",
          "iopub.status.busy": "2023-08-25T20:22:48.490385Z",
          "iopub.status.idle": "2023-08-25T20:22:48.505924Z",
          "shell.execute_reply": "2023-08-25T20:22:48.504805Z",
          "shell.execute_reply.started": "2023-08-25T20:22:48.490728Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7A9wHkn0v1Z6",
        "outputId": "45e6227c-f7ae-4a51-bfb3-edec35f73b91"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "DatasetDict({\n",
              "    train: Dataset({\n",
              "        features: ['Class', 'audio', 'label'],\n",
              "        num_rows: 1440\n",
              "    })\n",
              "    test: Dataset({\n",
              "        features: ['Class', 'audio', 'label'],\n",
              "        num_rows: 360\n",
              "    })\n",
              "})"
            ]
          },
          "metadata": {},
          "execution_count": 22
        }
      ],
      "source": [
        "dd = dd.train_test_split(test_size=0.2)\n",
        "dd"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "b0xejDmrv1Z6"
      },
      "source": [
        "# Load facebook/wav2vec2-base-960h model"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 23,
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-08-25T20:22:50.872499Z",
          "iopub.status.busy": "2023-08-25T20:22:50.872122Z",
          "iopub.status.idle": "2023-08-25T20:22:55.404934Z",
          "shell.execute_reply": "2023-08-25T20:22:55.404003Z",
          "shell.execute_reply.started": "2023-08-25T20:22:50.872469Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Jp969AXsv1Z6",
        "outputId": "e2de5ced-a70b-4729-ec94-754efee65c51"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Some weights of the model checkpoint at facebook/wav2vec2-base-960h were not used when initializing Wav2Vec2ForSequenceClassification: ['lm_head.weight', 'lm_head.bias']\n",
            "- This IS expected if you are initializing Wav2Vec2ForSequenceClassification from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).\n",
            "- This IS NOT expected if you are initializing Wav2Vec2ForSequenceClassification from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).\n",
            "Some weights of Wav2Vec2ForSequenceClassification were not initialized from the model checkpoint at facebook/wav2vec2-base-960h and are newly initialized: ['classifier.bias', 'projector.weight', 'classifier.weight', 'wav2vec2.masked_spec_embed', 'projector.bias']\n",
            "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "94.570889\n"
          ]
        }
      ],
      "source": [
        "from transformers import AutoFeatureExtractor, AutoModelForAudioClassification\n",
        "\n",
        "model_str = \"facebook/wav2vec2-base-960h\"\n",
        "feature_extractor = AutoFeatureExtractor.from_pretrained(model_str)\n",
        "model = AutoModelForAudioClassification.from_pretrained(model_str,num_labels=len(labels))\n",
        "model.config.id2label = id2label\n",
        "# number of trainable parameters\n",
        "print(model.num_parameters(only_trainable=True)/1e6)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 24,
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-08-25T20:22:55.407718Z",
          "iopub.status.busy": "2023-08-25T20:22:55.407114Z",
          "iopub.status.idle": "2023-08-25T20:26:19.692863Z",
          "shell.execute_reply": "2023-08-25T20:26:19.69157Z",
          "shell.execute_reply.started": "2023-08-25T20:22:55.407681Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 81,
          "referenced_widgets": [
            "cbd5d5a9a6574755bbf2a9a03dfe7819",
            "f272d8bc69e342f9a89801f60b1b9c04",
            "5430972ca63040118fdb1aa27580cfa2",
            "aab13ee08d794cbc9f65904eee195e37",
            "48e6ca81cc9d42e788d2f80c824de15b",
            "6401fbebf15f493f891b623cbb3291a7",
            "083c63182fef453b988cd7cb60ffaf48",
            "7a88a9d011684c16a295698788bc5aa2",
            "f7d4d166281541bcb3f75701f1d1c465",
            "562a6c3ee3f2413cac23fc9acaf0f0d0",
            "70f15e0e33254b758921b9ce25daad19",
            "395488f71a004b89b6422c4ee5d5e191",
            "0b3cd03569004d138271f4ed9c520889",
            "174b3a08b4bc4e3098b5ddce1bb92a6f",
            "21a53cbd79224b02b55cf98b8fabc5d8",
            "a36671cdd54c468a80c1e73cd1dc12c0",
            "cceb9e40ef7647ffa898f7b85b21a137",
            "adccaa0f22fe4c508c7b135d510c2ecd",
            "549760f314f7418ca268eee9008350d1",
            "da837e46c34a4c71964ef875ac805b9d",
            "582beb8e51ea44eabf6c9457c45f385f",
            "ea252b235acb4fc8a69b851fd82c81ea"
          ]
        },
        "id": "uNpH0snuv1Z6",
        "outputId": "f7914df4-245f-4a9c-c239-2416780ee851"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Map:   0%|          | 0/360 [00:00<?, ? examples/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "cbd5d5a9a6574755bbf2a9a03dfe7819"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Map:   0%|          | 0/1440 [00:00<?, ? examples/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "395488f71a004b89b6422c4ee5d5e191"
            }
          },
          "metadata": {}
        }
      ],
      "source": [
        "def preprocess_function(batch):\n",
        "    inputs = feature_extractor(batch['audio'], sampling_rate=RATE_HZ, max_length=MAX_LENGTH, truncation=True)\n",
        "    inputs['input_values'] = inputs['input_values'][0]\n",
        "    return inputs\n",
        "\n",
        "dd['test'] = dd['test'].map(preprocess_function, remove_columns=\"audio\", batched=False)\n",
        "dd['train'] = dd['train'].map(preprocess_function, remove_columns=\"audio\", batched=False)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 25,
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-08-25T20:26:19.69653Z",
          "iopub.status.busy": "2023-08-25T20:26:19.695747Z",
          "iopub.status.idle": "2023-08-25T20:26:20.28016Z",
          "shell.execute_reply": "2023-08-25T20:26:20.279036Z",
          "shell.execute_reply.started": "2023-08-25T20:26:19.696485Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-dzeqJMiv1Z6",
        "outputId": "b3ae0674-8f7d-48ff-a510-e146e3ca46b2"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "52"
            ]
          },
          "metadata": {},
          "execution_count": 25
        }
      ],
      "source": [
        "gc.collect()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "RiD5VICHv1Z6"
      },
      "source": [
        "# Train and evaluate model"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 26,
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-08-25T20:26:24.164397Z",
          "iopub.status.busy": "2023-08-25T20:26:24.163984Z",
          "iopub.status.idle": "2023-08-25T20:26:24.638652Z",
          "shell.execute_reply": "2023-08-25T20:26:24.637692Z",
          "shell.execute_reply.started": "2023-08-25T20:26:24.164365Z"
        },
        "trusted": true,
        "id": "ohnyr-8Xv1Z6"
      },
      "outputs": [],
      "source": [
        "import evaluate\n",
        "\n",
        "accuracy = evaluate.load(\"accuracy\")\n",
        "\n",
        "from sklearn.metrics import roc_auc_score\n",
        "def compute_metrics(eval_pred):\n",
        "    # Compute the ROC AUC score\n",
        "    predictions = eval_pred.predictions\n",
        "    predictions = np.exp(predictions)/np.exp(predictions).sum(axis=1, keepdims=True)\n",
        "    label_ids = eval_pred.label_ids\n",
        "    roc_auc = roc_auc_score(label_ids, predictions, average='macro', multi_class='ovr') # one-vs-rest ROC AUC score\n",
        "\n",
        "    # Calculate accuracy using the loaded accuracy metric\n",
        "    acc_score = accuracy.compute(predictions=predictions.argmax(axis=1), references=label_ids)['accuracy']\n",
        "\n",
        "    return {\n",
        "        \"roc_auc\": roc_auc,\n",
        "        \"accuracy\": acc_score\n",
        "    }"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 27,
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-08-25T20:26:25.004977Z",
          "iopub.status.busy": "2023-08-25T20:26:25.004613Z",
          "iopub.status.idle": "2023-08-25T20:26:25.143253Z",
          "shell.execute_reply": "2023-08-25T20:26:25.142248Z",
          "shell.execute_reply.started": "2023-08-25T20:26:25.004947Z"
        },
        "trusted": true,
        "id": "txxnAwtXv1Z6"
      },
      "outputs": [],
      "source": [
        "from transformers import TrainingArguments, Trainer\n",
        "batch_size=1\n",
        "warmup_steps=50\n",
        "weight_decay=0.02\n",
        "num_train_epochs=5\n",
        "model_name = \"epoch_musical_instruments_identification_2\"\n",
        "training_args = TrainingArguments(\n",
        "    output_dir=model_name,\n",
        "    logging_dir='./logs',\n",
        "    num_train_epochs=num_train_epochs,\n",
        "    per_device_train_batch_size=batch_size,\n",
        "    per_device_eval_batch_size=batch_size,\n",
        "    learning_rate=5e-6, # 1e-6\n",
        "    logging_strategy='steps',\n",
        "    logging_first_step=True,\n",
        "    load_best_model_at_end=True,\n",
        "    logging_steps=1,\n",
        "    evaluation_strategy='epoch',\n",
        "    warmup_steps=warmup_steps,\n",
        "    weight_decay=weight_decay,\n",
        "    gradient_accumulation_steps=4,\n",
        "    gradient_checkpointing=True,\n",
        "    eval_steps=1,\n",
        "    save_strategy='epoch',\n",
        "    save_total_limit=1, # save fewer checkpoints to limit used space\n",
        "    report_to=\"mlflow\",  # log to mlflow\n",
        ")\n",
        "\n",
        "trainer = Trainer(\n",
        "    model=model,\n",
        "    args=training_args,\n",
        "    train_dataset=dd[\"train\"],\n",
        "    eval_dataset=dd[\"test\"],\n",
        "    tokenizer=feature_extractor,\n",
        "    compute_metrics=compute_metrics,\n",
        ")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 28,
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-08-25T20:26:25.896974Z",
          "iopub.status.busy": "2023-08-25T20:26:25.896607Z",
          "iopub.status.idle": "2023-08-25T20:27:18.214166Z",
          "shell.execute_reply": "2023-08-25T20:27:18.213086Z",
          "shell.execute_reply.started": "2023-08-25T20:26:25.896942Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 145
        },
        "id": "dhqcIyg1v1Z6",
        "outputId": "0ca2f630-cc11-4719-b066-8e864a162bc3"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "    <div>\n",
              "      \n",
              "      <progress value='360' max='360' style='width:300px; height:20px; vertical-align: middle;'></progress>\n",
              "      [360/360 00:13]\n",
              "    </div>\n",
              "    "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'eval_loss': 2.1962826251983643,\n",
              " 'eval_roc_auc': 0.5694954228750835,\n",
              " 'eval_accuracy': 0.08333333333333333,\n",
              " 'eval_runtime': 13.9713,\n",
              " 'eval_samples_per_second': 25.767,\n",
              " 'eval_steps_per_second': 25.767}"
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ],
      "source": [
        "trainer.evaluate()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 29,
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-08-25T20:27:18.216548Z",
          "iopub.status.busy": "2023-08-25T20:27:18.216093Z",
          "iopub.status.idle": "2023-08-25T20:40:19.469288Z",
          "shell.execute_reply": "2023-08-25T20:40:19.468278Z",
          "shell.execute_reply.started": "2023-08-25T20:27:18.216511Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 306
        },
        "id": "iExPdouFv1Z6",
        "outputId": "350fc5a7-1e6f-401f-bc15-67d7a267c421"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "    <div>\n",
              "      \n",
              "      <progress value='1800' max='1800' style='width:300px; height:20px; vertical-align: middle;'></progress>\n",
              "      [1800/1800 14:17, Epoch 5/5]\n",
              "    </div>\n",
              "    <table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              " <tr style=\"text-align: left;\">\n",
              "      <th>Epoch</th>\n",
              "      <th>Training Loss</th>\n",
              "      <th>Validation Loss</th>\n",
              "      <th>Roc Auc</th>\n",
              "      <th>Accuracy</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <td>1</td>\n",
              "      <td>1.987200</td>\n",
              "      <td>1.887450</td>\n",
              "      <td>0.924788</td>\n",
              "      <td>0.663889</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>2</td>\n",
              "      <td>1.865200</td>\n",
              "      <td>1.479280</td>\n",
              "      <td>0.979918</td>\n",
              "      <td>0.800000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>3</td>\n",
              "      <td>1.386800</td>\n",
              "      <td>1.231143</td>\n",
              "      <td>0.986107</td>\n",
              "      <td>0.819444</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>4</td>\n",
              "      <td>1.324200</td>\n",
              "      <td>1.112123</td>\n",
              "      <td>0.982745</td>\n",
              "      <td>0.925000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>5</td>\n",
              "      <td>1.186900</td>\n",
              "      <td>1.063902</td>\n",
              "      <td>0.985880</td>\n",
              "      <td>0.933333</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table><p>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "    <div>\n",
              "      \n",
              "      <progress value='720' max='360' style='width:300px; height:20px; vertical-align: middle;'></progress>\n",
              "      [360/360 02:57]\n",
              "    </div>\n",
              "    "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "TrainOutput(global_step=1800, training_loss=1.6022601200143496, metrics={'train_runtime': 858.1149, 'train_samples_per_second': 8.39, 'train_steps_per_second': 2.098, 'total_flos': 1.961021954304e+17, 'train_loss': 1.6022601200143496, 'epoch': 5.0})"
            ]
          },
          "metadata": {},
          "execution_count": 29
        }
      ],
      "source": [
        "trainer.train()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 30,
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-08-25T20:40:19.471496Z",
          "iopub.status.busy": "2023-08-25T20:40:19.47081Z",
          "iopub.status.idle": "2023-08-25T20:41:11.413982Z",
          "shell.execute_reply": "2023-08-25T20:41:11.412977Z",
          "shell.execute_reply.started": "2023-08-25T20:40:19.471445Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 163
        },
        "id": "09LuQwggv1Z6",
        "outputId": "1120305c-3187-42b9-8588-b1b805b3085b"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "    <div>\n",
              "      \n",
              "      <progress value='360' max='360' style='width:300px; height:20px; vertical-align: middle;'></progress>\n",
              "      [360/360 00:14]\n",
              "    </div>\n",
              "    "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'eval_loss': 1.063901662826538,\n",
              " 'eval_roc_auc': 0.9858799160024966,\n",
              " 'eval_accuracy': 0.9333333333333333,\n",
              " 'eval_runtime': 14.1816,\n",
              " 'eval_samples_per_second': 25.385,\n",
              " 'eval_steps_per_second': 25.385,\n",
              " 'epoch': 5.0}"
            ]
          },
          "metadata": {},
          "execution_count": 30
        }
      ],
      "source": [
        "trainer.evaluate()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 31,
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-08-25T20:41:11.417167Z",
          "iopub.status.busy": "2023-08-25T20:41:11.416781Z",
          "iopub.status.idle": "2023-08-25T20:41:12.338501Z",
          "shell.execute_reply": "2023-08-25T20:41:12.336843Z",
          "shell.execute_reply.started": "2023-08-25T20:41:11.417125Z"
        },
        "trusted": true,
        "id": "JMPOlP-Bv1Z6"
      },
      "outputs": [],
      "source": [
        "trainer.save_model()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 32,
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-08-25T20:41:12.347732Z",
          "iopub.status.busy": "2023-08-25T20:41:12.344843Z",
          "iopub.status.idle": "2023-08-25T20:41:13.61806Z",
          "shell.execute_reply": "2023-08-25T20:41:13.617068Z",
          "shell.execute_reply.started": "2023-08-25T20:41:12.347689Z"
        },
        "trusted": true,
        "id": "6sfjyAJ_v1Z6"
      },
      "outputs": [],
      "source": [
        "from transformers import pipeline\n",
        "\n",
        "pipe=pipeline('audio-classification',model=model_name,device=0)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 42,
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-08-25T20:41:13.62042Z",
          "iopub.status.busy": "2023-08-25T20:41:13.619849Z",
          "iopub.status.idle": "2023-08-25T20:41:13.749029Z",
          "shell.execute_reply": "2023-08-25T20:41:13.747941Z",
          "shell.execute_reply.started": "2023-08-25T20:41:13.620383Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "k48pJRHNv1Z6",
        "outputId": "20d9e631-91df-4854-bd2f-510b4888f873"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[{'score': 0.2527730166912079, 'label': 'Hi_Hats'},\n",
              " {'score': 0.2161761224269867, 'label': 'Trumpet'},\n",
              " {'score': 0.09011658281087875, 'label': 'Acoustic_Guitar'},\n",
              " {'score': 0.08810547739267349, 'label': 'Violin'},\n",
              " {'score': 0.08344808965921402, 'label': 'Keyboard'}]"
            ]
          },
          "metadata": {},
          "execution_count": 42
        }
      ],
      "source": [
        "# Drum example\n",
        "audio,rate=torchaudio.load(r'/content/Drums.wav')\n",
        "transform=torchaudio.transforms.Resample(rate,RATE_HZ)\n",
        "audio=transform(audio).numpy().reshape(-1)[:MAX_LENGTH]\n",
        "# make a classification pipeline\n",
        "pipe(audio)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 34,
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-08-25T20:52:18.33518Z",
          "iopub.status.busy": "2023-08-25T20:52:18.334799Z",
          "iopub.status.idle": "2023-08-25T20:52:18.589051Z",
          "shell.execute_reply": "2023-08-25T20:52:18.588084Z",
          "shell.execute_reply.started": "2023-08-25T20:52:18.335146Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "imwGCSy1v1Z6",
        "outputId": "90c86263-98d5-4003-f685-39a06d873f86"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(48000,)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[{'score': 0.24973008036613464, 'label': 'Acoustic_Guitar'},\n",
              " {'score': 0.22217394411563873, 'label': 'Electro_Guitar'},\n",
              " {'score': 0.11619594693183899, 'label': 'Hi_Hats'},\n",
              " {'score': 0.11225389689207077, 'label': 'Violin'},\n",
              " {'score': 0.0989580750465393, 'label': 'Trumpet'}]"
            ]
          },
          "metadata": {},
          "execution_count": 34
        }
      ],
      "source": [
        "# Guitar example\n",
        "audio,rate=torchaudio.load('/content/Guitar+Drum.wav')\n",
        "transform=torchaudio.transforms.Resample(rate,RATE_HZ)\n",
        "audio=transform(audio).numpy().reshape(-1)[:MAX_LENGTH]\n",
        "print(audio.shape)\n",
        "# make a classification pipeline\n",
        "pipe(audio)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Harmonica example\n",
        "audio,rate=torchaudio.load(r'/content/Harmonica.wav')\n",
        "transform=torchaudio.transforms.Resample(rate,RATE_HZ)\n",
        "audio=transform(audio).numpy().reshape(-1)[:MAX_LENGTH]\n",
        "# make a classification pipeline\n",
        "pipe(audio)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lsrkK5_0xqnI",
        "outputId": "b79be130-c0f9-4e75-f5dd-e427d718fadf"
      },
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[{'score': 0.21980856359004974, 'label': 'Trumpet'},\n",
              " {'score': 0.17091619968414307, 'label': 'Violin'},\n",
              " {'score': 0.1648535430431366, 'label': 'Hi_Hats'},\n",
              " {'score': 0.14362575113773346, 'label': 'Acoustic_Guitar'},\n",
              " {'score': 0.10644778609275818, 'label': 'Electro_Guitar'}]"
            ]
          },
          "metadata": {},
          "execution_count": 35
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Harp example\n",
        "audio,rate=torchaudio.load(r'/content/Harp.wav')\n",
        "transform=torchaudio.transforms.Resample(rate,RATE_HZ)\n",
        "audio=transform(audio).numpy().reshape(-1)[:MAX_LENGTH]\n",
        "# make a classification pipeline\n",
        "pipe(audio)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GTf6tGTwxxTe",
        "outputId": "c584dfc8-cfeb-48b1-939b-d524c9c90a0f"
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[{'score': 0.24473153054714203, 'label': 'Acoustic_Guitar'},\n",
              " {'score': 0.2075718492269516, 'label': 'Electro_Guitar'},\n",
              " {'score': 0.16935545206069946, 'label': 'Violin'},\n",
              " {'score': 0.08321988582611084, 'label': 'Trumpet'},\n",
              " {'score': 0.07993069291114807, 'label': 'Hi_Hats'}]"
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 0 example\n",
        "audio,rate=torchaudio.load(r'/content/0.wav')\n",
        "transform=torchaudio.transforms.Resample(rate,RATE_HZ)\n",
        "audio=transform(audio).numpy().reshape(-1)[:MAX_LENGTH]\n",
        "# make a classification pipeline\n",
        "pipe(audio)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mT5kfTm7x0zd",
        "outputId": "a231ade1-0c5f-42b5-c15e-452ed2d2dff4"
      },
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[{'score': 0.2241281419992447, 'label': 'Hi_Hats'},\n",
              " {'score': 0.20786386728286743, 'label': 'Trumpet'},\n",
              " {'score': 0.1382199227809906, 'label': 'Acoustic_Guitar'},\n",
              " {'score': 0.11451765149831772, 'label': 'Electro_Guitar'},\n",
              " {'score': 0.1022421345114708, 'label': 'Violin'}]"
            ]
          },
          "metadata": {},
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 38,
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-08-25T20:52:24.272147Z",
          "iopub.status.busy": "2023-08-25T20:52:24.271077Z",
          "iopub.status.idle": "2023-08-25T20:52:24.291804Z",
          "shell.execute_reply": "2023-08-25T20:52:24.290254Z",
          "shell.execute_reply.started": "2023-08-25T20:52:24.272092Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 75
        },
        "id": "r-GuK6Zav1Z6",
        "outputId": "d05c10a2-193b-4902-c2fa-25dbe3d70d06"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<IPython.lib.display.Audio object>"
            ],
            "text/html": [
              "\n",
              "                <audio  controls=\"controls\" >\n",
              "                    <source src=\"data:audio/wav;base64,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\" type=\"audio/wav\" />\n",
              "                    Your browser does not support the audio element.\n",
              "                </audio>\n",
              "              "
            ]
          },
          "metadata": {},
          "execution_count": 38
        }
      ],
      "source": [
        "from IPython.display import Audio\n",
        "Audio(audio,rate=RATE_HZ)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "67SEoso7v1Z6"
      },
      "source": [
        "# Send model to Huggingface"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 39,
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-08-25T20:53:46.430678Z",
          "iopub.status.busy": "2023-08-25T20:53:46.430276Z",
          "iopub.status.idle": "2023-08-25T20:53:46.463421Z",
          "shell.execute_reply": "2023-08-25T20:53:46.462502Z",
          "shell.execute_reply.started": "2023-08-25T20:53:46.430646Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 415,
          "referenced_widgets": [
            "59fb998a582041d6b02e75cbdca504d2",
            "358eb150d7654b12bd1f5f8ab431e614",
            "a3619447b7284b01a211c8450a142894",
            "5546d008a047409dae663706cb58fdee",
            "8cefde04bfca43449d46e37a8aab2d70",
            "5b237782bdfb421ca6d63ffa80ae0a13",
            "18a879c36ad6400bb687d6474ae2b601",
            "bc87733d238548659a91389c4f95ba08",
            "9221809516aa42029e29d15311305e12",
            "63eed8cc226f405481b6bc52f25de0c6",
            "bfc02f590e8947f6b9a0eb16ab7debd1",
            "6e46e04fe0c4466ba526bb5bbeb9df03",
            "bd5e2d56ae6a4aaeb06cbdb59f53b1dd",
            "3a92039566e340a5b13f691cff1f6e73",
            "45765957a3e14e5e91170dede3d79d2d",
            "7ac803833a0b44e2ad04fa45cae0155a",
            "db8ba497b71b414eb8fca374ae34547f"
          ]
        },
        "id": "IJSgK2Gov1Z7",
        "outputId": "f6b8d533-bb1b-4b8e-c530-e249330bddf0"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(HTML(value='<center> <img\\nsrc=https://huggingface.co/front/assets/huggingface_logo-noborder.sv…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "59fb998a582041d6b02e75cbdca504d2"
            }
          },
          "metadata": {}
        }
      ],
      "source": [
        "# finally, save the model to Huggingface\n",
        "from huggingface_hub import notebook_login\n",
        "notebook_login()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 40,
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-08-25T20:54:34.655783Z",
          "iopub.status.busy": "2023-08-25T20:54:34.655405Z",
          "iopub.status.idle": "2023-08-25T20:54:34.896215Z",
          "shell.execute_reply": "2023-08-25T20:54:34.895291Z",
          "shell.execute_reply.started": "2023-08-25T20:54:34.655751Z"
        },
        "trusted": true,
        "id": "R9w3KpKjv1Z7"
      },
      "outputs": [],
      "source": [
        "from huggingface_hub import HfApi\n",
        "api = HfApi()\n",
        "repo_id = f\"Bhaveen/{model_name}\"\n",
        "try:\n",
        "    api.create_repo(repo_id)\n",
        "except:\n",
        "    print(f\"Repo {repo_id} already exists\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 41,
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-08-25T20:54:45.720113Z",
          "iopub.status.busy": "2023-08-25T20:54:45.719724Z",
          "iopub.status.idle": "2023-08-25T20:55:14.81949Z",
          "shell.execute_reply": "2023-08-25T20:55:14.818374Z",
          "shell.execute_reply.started": "2023-08-25T20:54:45.72008Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 419,
          "referenced_widgets": [
            "ef32057023ed4378934d45ec5caec0a8",
            "444074228d01495cbba7e11f23094f33",
            "7b136dd662254f739ce4b483019d26fb",
            "d363826dbbb04bff9402df11783698ab",
            "21eefac655974c819b2f3ba9c7b8e96f",
            "f671a79a6ed24498869fec963184345a",
            "7729a75f70754030b26fa6a4e0a0c62c",
            "f2e03cbee5834f2bb1edebf2d4bf2f0a",
            "a43c6985d45d4f2bb7fbc9b16f23e7c4",
            "1f2a7836881a4db7a7d7dcadce9d35d7",
            "9e317b220beb48e9acab6c22c54f140f",
            "c19171c53d1c4f9fa5b5b75582d289c4",
            "e9a1ddca793447b2a4f6ccf48a0474bf",
            "a0ca710c27d54c3987247aefddfddfe8",
            "4cbb42f67276467289f0f6488dc397a7",
            "98a0c7bbb11a4f928d189f5e595be7d4",
            "46bb3853e1aa4344b88ebc7588daf77f",
            "2bda805b06fc409a86bda818f5ee99c4",
            "1977f41f2f4a4dc98a7e418ca4e74548",
            "72ac83be623141a8a53ffdb1b2e8f8ac",
            "322e4d70956f47e6a8e94ad7f19a193e",
            "ec8b411f4a804a81b6a9dc080f4fc4d4",
            "1c88befec57f47f4a7d6aa38ee19d278",
            "f0ea08ed02584ce3863f2d0415ba68f9",
            "3519083429cd41fdbc7d9ff04189807e",
            "7aad80b8a9b040269d8d1b82f19db49c",
            "28f31564bb404e01b7551b71a8fa0185",
            "9667e7bb826444f08f98cb2d1ad1f805",
            "b5ea242bf74e4dfeb896a907b3d02c9d",
            "5213432e7e76444ead8b82b9b6e92fb5",
            "70c61d43d10d401ba184abecdb458507",
            "3f1cc4c80b2c45d29ec2904f9223d43b",
            "d4baad9063534defa58a89d195535cf1",
            "0c145affbc514659bf3453b668f4e056",
            "565934645b4b4d26b701148a73f11e4b",
            "d139ee082f6540bdaf123b6d74f00542",
            "76f77ef5af5f494c95920d962e2b5be0",
            "e46b5a2ea72d420584bc59cf7a2bf9da",
            "323ae6032a444efaa9042ca04abb7e61",
            "b0a8ab69ec184057937bda1ffa067efc",
            "c779c2125c82482eb88270eef0cc03a8",
            "82492389a12b4f3887747d9ddd71c549",
            "a6a5f429aea54e3ebb17c54fa5b6283e",
            "ccb307be23fc46248d8578fd6ed980d3",
            "7c821c27dc4c48aa9d14b24112ea732f",
            "ed17080f380a423d90d5263a007ef69b",
            "6bbd261a0bcb484f803be95203d2a2c3",
            "83de103400b742e98852983e4179d5c4",
            "68e03de602054e278e99f0974c02a750",
            "0906ae9fe1a34c9392b43d20823e0dbf",
            "fe0e281f170544f3b92f223356a0cd4f",
            "e88db9a2b03641e7bd225c762502a9b9",
            "a06b52a99bd64e4cb0327c6f0b54485f",
            "4a339501eb4f49eb9316be837112d8b2",
            "cc4ad2874d3643adac7ab84ffb9cfd32",
            "fff323b4a4784c2f9d4f09de363a8a08",
            "b5722839041141618c8c410e9bc00a95",
            "c793e89dc37d4db383761bda1d4cdf0e",
            "b5c22b781f784bc1847f377a5e04527d",
            "3e85fa9ffd334da6829166a4aac4ca80",
            "eaddbca489bb4a1b9957eb9770d93717",
            "a127180c470347f2886dea847325f733",
            "82f2bc6c0e544864908f049684564d96",
            "d8dc8fe1f3094ebf9de928192b75811d",
            "badbd59ac7c542daab1c4d3c1c05ada7",
            "db0790e179bb40f19e77e02b870500cb",
            "ddbb430a30824be7a0ef6b4bf44019c5",
            "934899de224e4581ae52b3e18dd9ceba",
            "17d1b7eb2e66459b8042c6a226c3956e",
            "01279aa7b5ee4a3e8275c65aeabf9b5b",
            "2ac6e5043a7b472286a4299d94838713",
            "f007267eae5b417f985c30f2799fa623",
            "3d21cbd7002542d793e16fe78f8ab776",
            "836cd0fdb79d4f7c87c1b626abd1cd8f",
            "2981514d40a0456490aeaa80f8f2aa07",
            "519f18e0c140449cbafb1c4c123892b8",
            "4e2543f1f0fe434491f7cc610f5512b6",
            "801aebb41150462f81546f5b321e926f",
            "621cf1e0beea494a92df78c8028d7404",
            "2c4f1ee7fb454476815866fb9aaac6e7",
            "0e906f0ee5c048ac955521d64efbaaf6",
            "348460a99dce4165bd055b0227bf4f87",
            "3b8ef98117774635ade7006f6dd9ea8b",
            "3905e613e3d1469a9aa9ea803956cfd2",
            "44e2c35dacde4684bdb24a42473f7db0",
            "eb0ec6e0c2c647749b0a4bc7db37b192",
            "91d85fe121014a8eb6d603121105d202",
            "eee9a15b849e45edb9ce74b0a98cfae4"
          ]
        },
        "id": "u5o3zFW1v1Z7",
        "outputId": "8c382588-681c-4e9f-967f-d8d99291ed9d"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "optimizer.pt:   0%|          | 0.00/757M [00:00<?, ?B/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "ef32057023ed4378934d45ec5caec0a8"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "pytorch_model.bin:   0%|          | 0.00/378M [00:00<?, ?B/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "c19171c53d1c4f9fa5b5b75582d289c4"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Upload 7 LFS files:   0%|          | 0/7 [00:00<?, ?it/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "1c88befec57f47f4a7d6aa38ee19d278"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "scheduler.pt:   0%|          | 0.00/1.06k [00:00<?, ?B/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "0c145affbc514659bf3453b668f4e056"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "rng_state.pth:   0%|          | 0.00/14.3k [00:00<?, ?B/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "7c821c27dc4c48aa9d14b24112ea732f"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "training_args.bin:   0%|          | 0.00/4.02k [00:00<?, ?B/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "fff323b4a4784c2f9d4f09de363a8a08"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "pytorch_model.bin:   0%|          | 0.00/378M [00:00<?, ?B/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "ddbb430a30824be7a0ef6b4bf44019c5"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "training_args.bin:   0%|          | 0.00/4.02k [00:00<?, ?B/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "801aebb41150462f81546f5b321e926f"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "CommitInfo(commit_url='https://huggingface.co/Bhaveen/epoch_musical_instruments_identification_2/commit/cc57f821b29bd95a1e25380359a392fd44eb582c', commit_message='Upload folder using huggingface_hub', commit_description='', oid='cc57f821b29bd95a1e25380359a392fd44eb582c', pr_url=None, repo_url=RepoUrl('https://huggingface.co/Bhaveen/epoch_musical_instruments_identification_2', endpoint='https://huggingface.co', repo_type='model', repo_id='Bhaveen/epoch_musical_instruments_identification_2'), pr_revision=None, pr_num=None)"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 41
        }
      ],
      "source": [
        "api.upload_folder(\n",
        "    folder_path=model_name,\n",
        "    path_in_repo = \".\",\n",
        "    repo_id=repo_id,\n",
        "    repo_type=\"model\"\n",
        ")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 41,
      "metadata": {
        "id": "vwGz613Wv1Z7"
      },
      "outputs": [],
      "source": []
    }
  ],
  "metadata": {
    "kaggle": {
      "accelerator": "gpu",
      "dataSources": [
        {
          "datasetId": 2768513,
          "sourceId": 4784071,
          "sourceType": "datasetVersion"
        }
      ],
      "dockerImageVersionId": 30528,
      "isGpuEnabled": true,
      "isInternetEnabled": true,
      "language": "python",
      "sourceType": "notebook"
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.10.16"
    },
    "colab": {
      "provenance": [],
      "gpuType": "T4"
    },
    "accelerator": "GPU",
    "widgets": {
      "application/vnd.jupyter.widget-state+json": {
        "cbd5d5a9a6574755bbf2a9a03dfe7819": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_f272d8bc69e342f9a89801f60b1b9c04",
              "IPY_MODEL_5430972ca63040118fdb1aa27580cfa2",
              "IPY_MODEL_aab13ee08d794cbc9f65904eee195e37"
            ],
            "layout": "IPY_MODEL_48e6ca81cc9d42e788d2f80c824de15b"
          }
        },
        "f272d8bc69e342f9a89801f60b1b9c04": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_6401fbebf15f493f891b623cbb3291a7",
            "placeholder": "​",
            "style": "IPY_MODEL_083c63182fef453b988cd7cb60ffaf48",
            "value": "Map: 100%"
          }
        },
        "5430972ca63040118fdb1aa27580cfa2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "success",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_7a88a9d011684c16a295698788bc5aa2",
            "max": 360,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_f7d4d166281541bcb3f75701f1d1c465",
            "value": 360
          }
        },
        "aab13ee08d794cbc9f65904eee195e37": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_562a6c3ee3f2413cac23fc9acaf0f0d0",
            "placeholder": "​",
            "style": "IPY_MODEL_70f15e0e33254b758921b9ce25daad19",
            "value": " 360/360 [00:12&lt;00:00, 47.13 examples/s]"
          }
        },
        "48e6ca81cc9d42e788d2f80c824de15b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "6401fbebf15f493f891b623cbb3291a7": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "083c63182fef453b988cd7cb60ffaf48": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "7a88a9d011684c16a295698788bc5aa2": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "f7d4d166281541bcb3f75701f1d1c465": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "562a6c3ee3f2413cac23fc9acaf0f0d0": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "70f15e0e33254b758921b9ce25daad19": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "395488f71a004b89b6422c4ee5d5e191": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_0b3cd03569004d138271f4ed9c520889",
              "IPY_MODEL_174b3a08b4bc4e3098b5ddce1bb92a6f",
              "IPY_MODEL_21a53cbd79224b02b55cf98b8fabc5d8"
            ],
            "layout": "IPY_MODEL_a36671cdd54c468a80c1e73cd1dc12c0"
          }
        },
        "0b3cd03569004d138271f4ed9c520889": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_cceb9e40ef7647ffa898f7b85b21a137",
            "placeholder": "​",
            "style": "IPY_MODEL_adccaa0f22fe4c508c7b135d510c2ecd",
            "value": "Map: 100%"
          }
        },
        "174b3a08b4bc4e3098b5ddce1bb92a6f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "success",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_549760f314f7418ca268eee9008350d1",
            "max": 1440,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_da837e46c34a4c71964ef875ac805b9d",
            "value": 1440
          }
        },
        "21a53cbd79224b02b55cf98b8fabc5d8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_582beb8e51ea44eabf6c9457c45f385f",
            "placeholder": "​",
            "style": "IPY_MODEL_ea252b235acb4fc8a69b851fd82c81ea",
            "value": " 1440/1440 [00:38&lt;00:00, 50.30 examples/s]"
          }
        },
        "a36671cdd54c468a80c1e73cd1dc12c0": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "cceb9e40ef7647ffa898f7b85b21a137": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "adccaa0f22fe4c508c7b135d510c2ecd": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "549760f314f7418ca268eee9008350d1": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "da837e46c34a4c71964ef875ac805b9d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "582beb8e51ea44eabf6c9457c45f385f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "ea252b235acb4fc8a69b851fd82c81ea": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "59fb998a582041d6b02e75cbdca504d2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "VBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "VBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_358eb150d7654b12bd1f5f8ab431e614",
              "IPY_MODEL_a3619447b7284b01a211c8450a142894",
              "IPY_MODEL_5546d008a047409dae663706cb58fdee",
              "IPY_MODEL_8cefde04bfca43449d46e37a8aab2d70",
              "IPY_MODEL_5b237782bdfb421ca6d63ffa80ae0a13"
            ],
            "layout": "IPY_MODEL_18a879c36ad6400bb687d6474ae2b601"
          }
        },
        "358eb150d7654b12bd1f5f8ab431e614": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_bc87733d238548659a91389c4f95ba08",
            "placeholder": "​",
            "style": "IPY_MODEL_9221809516aa42029e29d15311305e12",
            "value": "<center> <img\nsrc=https://huggingface.co/front/assets/huggingface_logo-noborder.svg\nalt='Hugging Face'> <br> Copy a token from <a\nhref=\"https://huggingface.co/settings/tokens\" target=\"_blank\">your Hugging Face\ntokens page</a> and paste it below. <br> Immediately click login after copying\nyour token or it might be stored in plain text in this notebook file. </center>"
          }
        },
        "a3619447b7284b01a211c8450a142894": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "PasswordModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "PasswordModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "PasswordView",
            "continuous_update": true,
            "description": "Token:",
            "description_tooltip": null,
            "disabled": false,
            "layout": "IPY_MODEL_63eed8cc226f405481b6bc52f25de0c6",
            "placeholder": "​",
            "style": "IPY_MODEL_bfc02f590e8947f6b9a0eb16ab7debd1",
            "value": ""
          }
        },
        "5546d008a047409dae663706cb58fdee": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "CheckboxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "CheckboxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "CheckboxView",
            "description": "Add token as git credential?",
            "description_tooltip": null,
            "disabled": false,
            "indent": true,
            "layout": "IPY_MODEL_6e46e04fe0c4466ba526bb5bbeb9df03",
            "style": "IPY_MODEL_bd5e2d56ae6a4aaeb06cbdb59f53b1dd",
            "value": true
          }
        },
        "8cefde04bfca43449d46e37a8aab2d70": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ButtonModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ButtonView",
            "button_style": "",
            "description": "Login",
            "disabled": false,
            "icon": "",
            "layout": "IPY_MODEL_3a92039566e340a5b13f691cff1f6e73",
            "style": "IPY_MODEL_45765957a3e14e5e91170dede3d79d2d",
            "tooltip": ""
          }
        },
        "5b237782bdfb421ca6d63ffa80ae0a13": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_7ac803833a0b44e2ad04fa45cae0155a",
            "placeholder": "​",
            "style": "IPY_MODEL_db8ba497b71b414eb8fca374ae34547f",
            "value": "\n<b>Pro Tip:</b> If you don't already have one, you can create a dedicated\n'notebooks' token with 'write' access, that you can then easily reuse for all\nnotebooks. </center>"
          }
        },
        "18a879c36ad6400bb687d6474ae2b601": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": "center",
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": "flex",
            "flex": null,
            "flex_flow": "column",
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": "50%"
          }
        },
        "bc87733d238548659a91389c4f95ba08": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "9221809516aa42029e29d15311305e12": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "63eed8cc226f405481b6bc52f25de0c6": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "bfc02f590e8947f6b9a0eb16ab7debd1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "6e46e04fe0c4466ba526bb5bbeb9df03": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "bd5e2d56ae6a4aaeb06cbdb59f53b1dd": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "3a92039566e340a5b13f691cff1f6e73": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "45765957a3e14e5e91170dede3d79d2d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ButtonStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "button_color": null,
            "font_weight": ""
          }
        },
        "7ac803833a0b44e2ad04fa45cae0155a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "db8ba497b71b414eb8fca374ae34547f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "ef32057023ed4378934d45ec5caec0a8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_444074228d01495cbba7e11f23094f33",
              "IPY_MODEL_7b136dd662254f739ce4b483019d26fb",
              "IPY_MODEL_d363826dbbb04bff9402df11783698ab"
            ],
            "layout": "IPY_MODEL_21eefac655974c819b2f3ba9c7b8e96f"
          }
        },
        "444074228d01495cbba7e11f23094f33": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_f671a79a6ed24498869fec963184345a",
            "placeholder": "​",
            "style": "IPY_MODEL_7729a75f70754030b26fa6a4e0a0c62c",
            "value": "optimizer.pt: 100%"
          }
        },
        "7b136dd662254f739ce4b483019d26fb": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "success",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_f2e03cbee5834f2bb1edebf2d4bf2f0a",
            "max": 756693690,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_a43c6985d45d4f2bb7fbc9b16f23e7c4",
            "value": 756693690
          }
        },
        "d363826dbbb04bff9402df11783698ab": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_1f2a7836881a4db7a7d7dcadce9d35d7",
            "placeholder": "​",
            "style": "IPY_MODEL_9e317b220beb48e9acab6c22c54f140f",
            "value": " 757M/757M [00:23&lt;00:00, 55.8MB/s]"
          }
        },
        "21eefac655974c819b2f3ba9c7b8e96f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "f671a79a6ed24498869fec963184345a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "7729a75f70754030b26fa6a4e0a0c62c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "f2e03cbee5834f2bb1edebf2d4bf2f0a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "a43c6985d45d4f2bb7fbc9b16f23e7c4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "1f2a7836881a4db7a7d7dcadce9d35d7": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "9e317b220beb48e9acab6c22c54f140f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "c19171c53d1c4f9fa5b5b75582d289c4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_e9a1ddca793447b2a4f6ccf48a0474bf",
              "IPY_MODEL_a0ca710c27d54c3987247aefddfddfe8",
              "IPY_MODEL_4cbb42f67276467289f0f6488dc397a7"
            ],
            "layout": "IPY_MODEL_98a0c7bbb11a4f928d189f5e595be7d4"
          }
        },
        "e9a1ddca793447b2a4f6ccf48a0474bf": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_46bb3853e1aa4344b88ebc7588daf77f",
            "placeholder": "​",
            "style": "IPY_MODEL_2bda805b06fc409a86bda818f5ee99c4",
            "value": "pytorch_model.bin: 100%"
          }
        },
        "a0ca710c27d54c3987247aefddfddfe8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "success",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_1977f41f2f4a4dc98a7e418ca4e74548",
            "max": 378358054,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_72ac83be623141a8a53ffdb1b2e8f8ac",
            "value": 378358054
          }
        },
        "4cbb42f67276467289f0f6488dc397a7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_322e4d70956f47e6a8e94ad7f19a193e",
            "placeholder": "​",
            "style": "IPY_MODEL_ec8b411f4a804a81b6a9dc080f4fc4d4",
            "value": " 378M/378M [00:12&lt;00:00, 40.6MB/s]"
          }
        },
        "98a0c7bbb11a4f928d189f5e595be7d4": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "46bb3853e1aa4344b88ebc7588daf77f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "2bda805b06fc409a86bda818f5ee99c4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "1977f41f2f4a4dc98a7e418ca4e74548": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "72ac83be623141a8a53ffdb1b2e8f8ac": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "322e4d70956f47e6a8e94ad7f19a193e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "ec8b411f4a804a81b6a9dc080f4fc4d4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "1c88befec57f47f4a7d6aa38ee19d278": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_f0ea08ed02584ce3863f2d0415ba68f9",
              "IPY_MODEL_3519083429cd41fdbc7d9ff04189807e",
              "IPY_MODEL_7aad80b8a9b040269d8d1b82f19db49c"
            ],
            "layout": "IPY_MODEL_28f31564bb404e01b7551b71a8fa0185"
          }
        },
        "f0ea08ed02584ce3863f2d0415ba68f9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_9667e7bb826444f08f98cb2d1ad1f805",
            "placeholder": "​",
            "style": "IPY_MODEL_b5ea242bf74e4dfeb896a907b3d02c9d",
            "value": "Upload 7 LFS files: 100%"
          }
        },
        "3519083429cd41fdbc7d9ff04189807e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "success",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_5213432e7e76444ead8b82b9b6e92fb5",
            "max": 7,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_70c61d43d10d401ba184abecdb458507",
            "value": 7
          }
        },
        "7aad80b8a9b040269d8d1b82f19db49c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_3f1cc4c80b2c45d29ec2904f9223d43b",
            "placeholder": "​",
            "style": "IPY_MODEL_d4baad9063534defa58a89d195535cf1",
            "value": " 7/7 [00:23&lt;00:00, 23.63s/it]"
          }
        },
        "28f31564bb404e01b7551b71a8fa0185": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "9667e7bb826444f08f98cb2d1ad1f805": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "b5ea242bf74e4dfeb896a907b3d02c9d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "5213432e7e76444ead8b82b9b6e92fb5": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "70c61d43d10d401ba184abecdb458507": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "3f1cc4c80b2c45d29ec2904f9223d43b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "d4baad9063534defa58a89d195535cf1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "0c145affbc514659bf3453b668f4e056": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_565934645b4b4d26b701148a73f11e4b",
              "IPY_MODEL_d139ee082f6540bdaf123b6d74f00542",
              "IPY_MODEL_76f77ef5af5f494c95920d962e2b5be0"
            ],
            "layout": "IPY_MODEL_e46b5a2ea72d420584bc59cf7a2bf9da"
          }
        },
        "565934645b4b4d26b701148a73f11e4b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_323ae6032a444efaa9042ca04abb7e61",
            "placeholder": "​",
            "style": "IPY_MODEL_b0a8ab69ec184057937bda1ffa067efc",
            "value": "scheduler.pt: 100%"
          }
        },
        "d139ee082f6540bdaf123b6d74f00542": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "success",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_c779c2125c82482eb88270eef0cc03a8",
            "max": 1064,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_82492389a12b4f3887747d9ddd71c549",
            "value": 1064
          }
        },
        "76f77ef5af5f494c95920d962e2b5be0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_a6a5f429aea54e3ebb17c54fa5b6283e",
            "placeholder": "​",
            "style": "IPY_MODEL_ccb307be23fc46248d8578fd6ed980d3",
            "value": " 1.06k/1.06k [00:00&lt;00:00, 8.68kB/s]"
          }
        },
        "e46b5a2ea72d420584bc59cf7a2bf9da": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "323ae6032a444efaa9042ca04abb7e61": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "b0a8ab69ec184057937bda1ffa067efc": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "c779c2125c82482eb88270eef0cc03a8": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "82492389a12b4f3887747d9ddd71c549": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "a6a5f429aea54e3ebb17c54fa5b6283e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "ccb307be23fc46248d8578fd6ed980d3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "7c821c27dc4c48aa9d14b24112ea732f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_ed17080f380a423d90d5263a007ef69b",
              "IPY_MODEL_6bbd261a0bcb484f803be95203d2a2c3",
              "IPY_MODEL_83de103400b742e98852983e4179d5c4"
            ],
            "layout": "IPY_MODEL_68e03de602054e278e99f0974c02a750"
          }
        },
        "ed17080f380a423d90d5263a007ef69b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_0906ae9fe1a34c9392b43d20823e0dbf",
            "placeholder": "​",
            "style": "IPY_MODEL_fe0e281f170544f3b92f223356a0cd4f",
            "value": "rng_state.pth: 100%"
          }
        },
        "6bbd261a0bcb484f803be95203d2a2c3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "success",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_e88db9a2b03641e7bd225c762502a9b9",
            "max": 14308,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_a06b52a99bd64e4cb0327c6f0b54485f",
            "value": 14308
          }
        },
        "83de103400b742e98852983e4179d5c4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_4a339501eb4f49eb9316be837112d8b2",
            "placeholder": "​",
            "style": "IPY_MODEL_cc4ad2874d3643adac7ab84ffb9cfd32",
            "value": " 14.3k/14.3k [00:00&lt;00:00, 105kB/s]"
          }
        },
        "68e03de602054e278e99f0974c02a750": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "0906ae9fe1a34c9392b43d20823e0dbf": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "fe0e281f170544f3b92f223356a0cd4f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "e88db9a2b03641e7bd225c762502a9b9": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "a06b52a99bd64e4cb0327c6f0b54485f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "4a339501eb4f49eb9316be837112d8b2": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "cc4ad2874d3643adac7ab84ffb9cfd32": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "fff323b4a4784c2f9d4f09de363a8a08": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_b5722839041141618c8c410e9bc00a95",
              "IPY_MODEL_c793e89dc37d4db383761bda1d4cdf0e",
              "IPY_MODEL_b5c22b781f784bc1847f377a5e04527d"
            ],
            "layout": "IPY_MODEL_3e85fa9ffd334da6829166a4aac4ca80"
          }
        },
        "b5722839041141618c8c410e9bc00a95": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_eaddbca489bb4a1b9957eb9770d93717",
            "placeholder": "​",
            "style": "IPY_MODEL_a127180c470347f2886dea847325f733",
            "value": "training_args.bin: 100%"
          }
        },
        "c793e89dc37d4db383761bda1d4cdf0e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "success",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_82f2bc6c0e544864908f049684564d96",
            "max": 4024,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_d8dc8fe1f3094ebf9de928192b75811d",
            "value": 4024
          }
        },
        "b5c22b781f784bc1847f377a5e04527d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_badbd59ac7c542daab1c4d3c1c05ada7",
            "placeholder": "​",
            "style": "IPY_MODEL_db0790e179bb40f19e77e02b870500cb",
            "value": " 4.02k/4.02k [00:00&lt;00:00, 35.7kB/s]"
          }
        },
        "3e85fa9ffd334da6829166a4aac4ca80": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "eaddbca489bb4a1b9957eb9770d93717": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "a127180c470347f2886dea847325f733": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "82f2bc6c0e544864908f049684564d96": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "d8dc8fe1f3094ebf9de928192b75811d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "badbd59ac7c542daab1c4d3c1c05ada7": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "db0790e179bb40f19e77e02b870500cb": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "ddbb430a30824be7a0ef6b4bf44019c5": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_934899de224e4581ae52b3e18dd9ceba",
              "IPY_MODEL_17d1b7eb2e66459b8042c6a226c3956e",
              "IPY_MODEL_01279aa7b5ee4a3e8275c65aeabf9b5b"
            ],
            "layout": "IPY_MODEL_2ac6e5043a7b472286a4299d94838713"
          }
        },
        "934899de224e4581ae52b3e18dd9ceba": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_f007267eae5b417f985c30f2799fa623",
            "placeholder": "​",
            "style": "IPY_MODEL_3d21cbd7002542d793e16fe78f8ab776",
            "value": "pytorch_model.bin: 100%"
          }
        },
        "17d1b7eb2e66459b8042c6a226c3956e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "success",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_836cd0fdb79d4f7c87c1b626abd1cd8f",
            "max": 378358054,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_2981514d40a0456490aeaa80f8f2aa07",
            "value": 378358054
          }
        },
        "01279aa7b5ee4a3e8275c65aeabf9b5b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_519f18e0c140449cbafb1c4c123892b8",
            "placeholder": "​",
            "style": "IPY_MODEL_4e2543f1f0fe434491f7cc610f5512b6",
            "value": " 378M/378M [00:12&lt;00:00, 38.6MB/s]"
          }
        },
        "2ac6e5043a7b472286a4299d94838713": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "f007267eae5b417f985c30f2799fa623": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "3d21cbd7002542d793e16fe78f8ab776": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "836cd0fdb79d4f7c87c1b626abd1cd8f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "2981514d40a0456490aeaa80f8f2aa07": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "519f18e0c140449cbafb1c4c123892b8": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "4e2543f1f0fe434491f7cc610f5512b6": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "801aebb41150462f81546f5b321e926f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_621cf1e0beea494a92df78c8028d7404",
              "IPY_MODEL_2c4f1ee7fb454476815866fb9aaac6e7",
              "IPY_MODEL_0e906f0ee5c048ac955521d64efbaaf6"
            ],
            "layout": "IPY_MODEL_348460a99dce4165bd055b0227bf4f87"
          }
        },
        "621cf1e0beea494a92df78c8028d7404": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_3b8ef98117774635ade7006f6dd9ea8b",
            "placeholder": "​",
            "style": "IPY_MODEL_3905e613e3d1469a9aa9ea803956cfd2",
            "value": "training_args.bin: 100%"
          }
        },
        "2c4f1ee7fb454476815866fb9aaac6e7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "success",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_44e2c35dacde4684bdb24a42473f7db0",
            "max": 4024,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_eb0ec6e0c2c647749b0a4bc7db37b192",
            "value": 4024
          }
        },
        "0e906f0ee5c048ac955521d64efbaaf6": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_91d85fe121014a8eb6d603121105d202",
            "placeholder": "​",
            "style": "IPY_MODEL_eee9a15b849e45edb9ce74b0a98cfae4",
            "value": " 4.02k/4.02k [00:00&lt;00:00, 24.2kB/s]"
          }
        },
        "348460a99dce4165bd055b0227bf4f87": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "3b8ef98117774635ade7006f6dd9ea8b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "3905e613e3d1469a9aa9ea803956cfd2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "44e2c35dacde4684bdb24a42473f7db0": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "eb0ec6e0c2c647749b0a4bc7db37b192": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "91d85fe121014a8eb6d603121105d202": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "eee9a15b849e45edb9ce74b0a98cfae4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        }
      }
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}
